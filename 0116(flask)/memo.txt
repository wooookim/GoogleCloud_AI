웹 프로그래밍 통신
- 클라이언트가 보낸 요청과 그 요청을 처리한 결과를 웹서버를 경유해서 주고 받는다.
- CGI(Common Gateway Interface) 규약: 웹 서버와 웹 프로그램 간 메세지를 주고 받기 위한 약속

파이썬은 CGI 모듈을 통해 CGI 환경변수/표준 입출력에 직접 엑세스해서 웹프로그램을 작성할 수 있다.

웹 프로그램은 웹 서버와는 독립적이어야 한다. 이 독립성은 WSGI(Web Server Gateway Interface) 표준을 통해서 구현.
WSGI 표준을 따르면 웹 서버 종류와 상관없이 동작됨.

Flask는 Werkzeug(백자이그) 기반으로 작성. 이 백자이그가 WSGI 코어와 URL 라우팅을 지원.



모든 웹 프로그램은 클라이언트가 웹 브라우저를 이용해서 웹프로그램이 제공하는(갖고 있는) 자원을 요청하면
웹 브라우저가 이해할 수 있는 형태로 재가공하거나, 보유한 자원 그대로 웹 브라우저에게 제공.
제공하는 단계(응답하는 단계) 혹은 자원 반환단계 웹 서버가 컨텐츠 협상(Contents Negotiation)이라는 단계를 거친 후
웹 브라우저에 결과를 반환
이 협상을 3가지로 분류
1. 서버 기반 협상
2. 에이전트 기반(캐시서버) 협상
3. 투명한 협상: 1과 2를 혼합



HTTP 메세지는 요청(REQUEST) 메세지와 응답(RESPONSE) 메세지로 나뉨
- 요청 메세지: 메서드(GET, POST), HTTP 버전, 호스트명, 웹 브라우저 정보(User_agent), 언어(kr, us) 기록
- 응답 메세지: 첫번째 행: HTTP 버전, HTTP 상태코드(200: 성공 /400, 404...), 상태코드 문자열
            : 두번째 행: 순서없이 정보를 기술 / 날짜 , 서버 종류, 사용자 정의 헤더



"웹" 프레임워크
1. 마이크로 프레임워크
    - 웹 프로그래밍에 있어서 가장 핵심적인 요소만을 포함하는 프레임워크
    - 파이썬: Flask. Bottle
    - 루비: 시나트라

2. 풀스택 프레임워크
    - 웹 프로그래밍에 있어서 필요로하는 모든 것을 종합적으로 갖추고 있는 프레임워크
    - 인증과 권한, ORM, 템플릿 라이브러리, 국제화와 지역화, 관리자, 보안 등의 여러 요소를 갖춤
    - 파이썬: Django, Web2py, Turbogear
    - 자바: Spring
    - 루비: Rails